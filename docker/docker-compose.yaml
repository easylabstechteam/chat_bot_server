version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: chatbot_postgres
    environment:
      POSTGRES_USER: chatbot_user
      POSTGRES_PASSWORD: chatbot_pass
      POSTGRES_DB: chatbot_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - chatbot_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatbot_user"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: chatbot_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@chatbot.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - chatbot_net

  redis:
    image: redis:7
    container_name: chatbot_redis
    ports:
      - "6379:6379"
    networks:
      - chatbot_net
    volumes:
      - redis_data:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]

  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: chatbot_backend
    env_file:
      - ../.env
    volumes:
      - ../app:/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - chatbot_net
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
  redis_data:

networks:
  chatbot_net:
    driver: bridge
